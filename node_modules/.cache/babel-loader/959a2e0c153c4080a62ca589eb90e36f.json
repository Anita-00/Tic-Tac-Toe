{"ast":null,"code":"import circle from \"./circle.png\";\nimport x from \"./x.png\";\nexport default {\n  data() {\n    return {\n      id: 1,\n      isPlayer1: false,\n      img: \"\",\n      img1: circle,\n      img2: x\n    };\n  },\n\n  methods: {\n    fillPlayerSign(i) {\n      if (this.isPlayer1) {\n        /*this.img = this.img1*/\n        this.img = this.img1;\n      } else {\n        this.img = this.img2;\n      }\n\n      let imgId = 'img' + toString(i);\n      let imgNode = document.getElementById(imgId);\n      let boxNode = document.getElementById(i);\n      let existingImg = boxNode.contains(imgNode);\n\n      if (existingImg === false) {\n        let newImg = document.createElement(\"img\");\n        newImg.src = this.img;\n        newImg.style.width = '100%';\n        newImg.id = imgId;\n        console.log('id');\n        console.log(newImg, id);\n        boxNode.appendChild(newImg);\n        this.isPlayer1 = !this.isPlayer1;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAWI,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,eAAe;EACXC,IAAG,GAAK;IACJ,OAAO;MACHC,EAAE,EAAE,CADD;MAEHC,SAAS,EAAE,KAFR;MAGHC,GAAG,EAAE,EAHF;MAIHC,IAAI,EAAEN,MAJH;MAKHO,IAAI,EAAEN;IALH,CAAP;EAQH,CAVU;;EAWXO,OAAO,EAAE;IACLC,cAAc,CAACC,CAAD,EAAI;MACd,IAAI,KAAKN,SAAT,EAAoB;QAChB;QACA,KAAKC,GAAL,GAAW,KAAKC,IAAhB;MACJ,CAHA,MAGO;QACH,KAAKD,GAAL,GAAW,KAAKE,IAAhB;MACJ;;MAEA,IAAII,KAAI,GAAI,QAAMC,QAAQ,CAACF,CAAD,CAA1B;MACA,IAAIG,OAAM,GAAIC,QAAQ,CAACC,cAAT,CAAwBJ,KAAxB,CAAd;MACA,IAAIK,OAAM,GAAIF,QAAQ,CAACC,cAAT,CAAwBL,CAAxB,CAAd;MACA,IAAIO,WAAU,GAAID,OAAO,CAACE,QAAR,CAAiBL,OAAjB,CAAlB;;MACA,IAAII,WAAU,KAAM,KAApB,EAA2B;QACvB,IAAIE,MAAK,GAAIL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAb;QACAD,MAAM,CAACE,GAAP,GAAa,KAAKhB,GAAlB;QACAc,MAAM,CAACG,KAAP,CAAaC,KAAb,GAAqB,MAArB;QACAJ,MAAM,CAAChB,EAAP,GAAYQ,KAAZ;QACAa,OAAO,CAACC,GAAR,CAAY,IAAZ;QACAD,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAmBhB,EAAnB;QACAa,OAAO,CAACU,WAAR,CAAoBP,MAApB;QAEA,KAAKf,SAAL,GAAiB,CAAC,KAAKA,SAAvB;MACJ;IACJ;;EAxBK;AAXE,CAAf","names":["circle","x","data","id","isPlayer1","img","img1","img2","methods","fillPlayerSign","i","imgId","toString","imgNode","document","getElementById","boxNode","existingImg","contains","newImg","createElement","src","style","width","console","log","appendChild"],"sourceRoot":"","sources":["/Users/user/Documents/tic-tac-toe/src/components/Boxes.vue"],"sourcesContent":["<template>\n    <section class=\"game--container\" id=\"tester\">\n        <div v-for=\"i in 9\"  :key=\"i\">\n            <div :id=\"i\" class=\"cell\" @click=\"fillPlayerSign(i)\">\n            </div>\n        </div> \n    </section>\n    \n</template>\n  \n  <script>\n    import circle from \"./circle.png\"\n    import x from \"./x.png\"\n\n    export default {\n        data () {\n            return {\n                id: 1,\n                isPlayer1: false,\n                img: \"\",\n                img1: circle,\n                img2: x,\n            }\n            \n        },\n        methods: {\n            fillPlayerSign(i) {\n                if (this.isPlayer1) {\n                    /*this.img = this.img1*/\n                    this.img = this.img1\n                } else {\n                    this.img = this.img2\n                }\n\n                let imgId = 'img'+toString(i)\n                let imgNode = document.getElementById(imgId)\n                let boxNode = document.getElementById(i)\n                let existingImg = boxNode.contains(imgNode)\n                if (existingImg === false) {\n                    let newImg = document.createElement(\"img\")\n                    newImg.src = this.img\n                    newImg.style.width = '100%'\n                    newImg.id = imgId\n                    console.log('id')\n                    console.log(newImg,id)\n                    boxNode.appendChild(newImg)\n\n                    this.isPlayer1 = !this.isPlayer1\n                }\n            }\n\n        },\n    }\n    </script>\n    \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n\n    .game--container {\n        display: grid;\n        grid-template-columns: repeat(3, auto);\n        margin-top: 5%;\n        width: 60%;\n        margin-right: auto;\n        margin-left: auto;\n\n    }\n    .cell {\n\n        aspect-ratio: 1 / 1;\n        width: 9vh;\n        box-shadow: 0 0 0 1px #333333;\n        border: 1px solid #333333;\n        cursor: pointer;\n    }\n\n  </style>\n  "]},"metadata":{},"sourceType":"module"}