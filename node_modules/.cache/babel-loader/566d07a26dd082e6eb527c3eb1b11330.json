{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport circle from \"./circle.png\";\nimport x from \"./x.png\";\nexport default {\n  data() {\n    return {\n      id: 1,\n      isPlayer1: false,\n      img: \"\",\n      img1: circle,\n      img2: x\n    };\n  },\n\n  methods: {\n    setImage() {\n      if (this.isPlayer1) {\n        this.img = this.img1;\n      } else {\n        this.img = this.img2;\n      }\n    },\n\n    fillPlayerSign(i) {\n      this.setImage();\n      let imgId = 'img' + i;\n      let imgNode = document.getElementById(imgId);\n      let boxNode = document.getElementById(i);\n      let existingImg = boxNode.contains(imgNode);\n\n      if (existingImg === false) {\n        /* if there is no previous image in the box, add an image */\n        let newImg = document.createElement(\"img\");\n        newImg.src = this.img;\n        newImg.style.width = '100%';\n        newImg.id = imgId;\n        boxNode.appendChild(newImg);\n\n        if (this.checkWin(i)) {\n          this.announceWinner();\n        }\n\n        this.isPlayer1 = !this.isPlayer1;\n      }\n    }\n\n  },\n\n  checkWin(i) {\n    let isRowWin = this.checkLine(i, 1);\n    let isColWin = this.checkLine(i, 3);\n    let isDiagWin = this.checkDiag(i);\n\n    if (isRowWin || isColWin || isDiagWin) {\n      return true;\n    }\n  },\n\n  checkLine(i, difference) {\n    let pos = i;\n    let arr = [];\n    let boxNode;\n    let src;\n    /* checks if current and higher boxes have the current players image */\n\n    while (pos < 10) {\n      src = boxNode.img.src;\n\n      if (src == this.img) {\n        arr.push(true);\n      }\n\n      pos += difference;\n    }\n  },\n\n  announceWinner() {\n    console.log(this.isPlayer1);\n  }\n\n};","map":{"version":3,"mappings":";AAWI,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,eAAe;EACXC,IAAG,GAAK;IACJ,OAAO;MACHC,EAAE,EAAE,CADD;MAEHC,SAAS,EAAE,KAFR;MAGHC,GAAG,EAAE,EAHF;MAIHC,IAAI,EAAEN,MAJH;MAKHO,IAAI,EAAEN;IALH,CAAP;EAQH,CAVU;;EAWXO,OAAO,EAAE;IACLC,QAAQ,GAAG;MACP,IAAI,KAAKL,SAAT,EAAoB;QAChB,KAAKC,GAAL,GAAW,KAAKC,IAAhB;MACJ,CAFA,MAEO;QACH,KAAKD,GAAL,GAAW,KAAKE,IAAhB;MACJ;IACH,CAPI;;IAQLG,cAAc,CAACC,CAAD,EAAI;MAEd,KAAKF,QAAL;MACA,IAAIG,KAAI,GAAI,QAAOD,CAAnB;MACA,IAAIE,OAAM,GAAIC,QAAQ,CAACC,cAAT,CAAwBH,KAAxB,CAAd;MACA,IAAII,OAAM,GAAIF,QAAQ,CAACC,cAAT,CAAwBJ,CAAxB,CAAd;MACA,IAAIM,WAAU,GAAID,OAAO,CAACE,QAAR,CAAiBL,OAAjB,CAAlB;;MAEA,IAAII,WAAU,KAAM,KAApB,EAA2B;QACvB;QACA,IAAIE,MAAK,GAAIL,QAAQ,CAACM,aAAT,CAAuB,KAAvB,CAAb;QACAD,MAAM,CAACE,GAAP,GAAa,KAAKhB,GAAlB;QACAc,MAAM,CAACG,KAAP,CAAaC,KAAb,GAAqB,MAArB;QACAJ,MAAM,CAAChB,EAAP,GAAYS,KAAZ;QACAI,OAAO,CAACQ,WAAR,CAAoBL,MAApB;;QAEA,IAAI,KAAKM,QAAL,CAAcd,CAAd,CAAJ,EAAsB;UAClB,KAAKe,cAAL;QACJ;;QACA,KAAKtB,SAAL,GAAiB,CAAC,KAAKA,SAAvB;MACJ;IACJ;;EA7BK,CAXE;;EA0CXqB,QAAQ,CAACd,CAAD,EAAI;IACJ,IAAIgB,QAAO,GAAI,KAAKC,SAAL,CAAejB,CAAf,EAAkB,CAAlB,CAAf;IACA,IAAIkB,QAAO,GAAI,KAAKD,SAAL,CAAejB,CAAf,EAAkB,CAAlB,CAAf;IACA,IAAImB,SAAQ,GAAI,KAAKC,SAAL,CAAepB,CAAf,CAAhB;;IACA,IAAIgB,QAAO,IAAKE,QAAZ,IAAwBC,SAA5B,EAAuC;MACnC,OAAO,IAAP;IACJ;EACP,CAjDU;;EAkDXF,SAAS,CAACjB,CAAD,EAAIqB,UAAJ,EAAgB;IACrB,IAAIC,GAAE,GAAItB,CAAV;IACA,IAAIuB,GAAE,GAAI,EAAV;IACA,IAAIlB,OAAJ;IACA,IAAIK,GAAJ;IAEA;;IACA,OAAOY,GAAE,GAAI,EAAb,EAAiB;MACbZ,GAAE,GAAIL,OAAO,CAACX,GAAR,CAAYgB,GAAlB;;MACA,IAAIA,GAAE,IAAK,KAAKhB,GAAhB,EAAqB;QACjB6B,GAAG,CAACC,IAAJ,CAAS,IAAT;MACJ;;MAEAF,GAAE,IAAKD,UAAP;IACJ;EAEH,CAlEU;;EAmEXN,cAAc,GAAG;IACbU,OAAO,CAACC,GAAR,CAAY,KAAKjC,SAAjB;EACJ;;AArEW,CAAf","names":["circle","x","data","id","isPlayer1","img","img1","img2","methods","setImage","fillPlayerSign","i","imgId","imgNode","document","getElementById","boxNode","existingImg","contains","newImg","createElement","src","style","width","appendChild","checkWin","announceWinner","isRowWin","checkLine","isColWin","isDiagWin","checkDiag","difference","pos","arr","push","console","log"],"sourceRoot":"","sources":["/Users/user/Documents/tic-tac-toe/src/components/Boxes.vue"],"sourcesContent":["<template>\n    <section class=\"game--container\" id=\"tester\">\n        <div v-for=\"i in 9\"  :key=\"i\">\n            <div :id=\"i\" class=\"cell\" @click=\"fillPlayerSign(i)\">\n            </div>\n        </div> \n    </section>\n    \n</template>\n  \n  <script>\n    import circle from \"./circle.png\"\n    import x from \"./x.png\"\n\n    export default {\n        data () {\n            return {\n                id: 1,\n                isPlayer1: false,\n                img: \"\",\n                img1: circle,\n                img2: x,\n            }\n            \n        },\n        methods: {\n            setImage() {\n                if (this.isPlayer1) {\n                    this.img = this.img1\n                } else {\n                    this.img = this.img2\n                }\n            }, \n            fillPlayerSign(i) {\n                \n                this.setImage()\n                let imgId = 'img'+ i\n                let imgNode = document.getElementById(imgId)\n                let boxNode = document.getElementById(i)\n                let existingImg = boxNode.contains(imgNode)\n\n                if (existingImg === false) {\n                    /* if there is no previous image in the box, add an image */\n                    let newImg = document.createElement(\"img\")\n                    newImg.src = this.img\n                    newImg.style.width = '100%'\n                    newImg.id = imgId\n                    boxNode.appendChild(newImg)\n                    \n                    if (this.checkWin(i)) {\n                        this.announceWinner()\n                    }\n                    this.isPlayer1 = !this.isPlayer1\n                }\n            }\n        }, \n        checkWin(i) {\n                let isRowWin = this.checkLine(i, 1)\n                let isColWin = this.checkLine(i, 3)\n                let isDiagWin = this.checkDiag(i)\n                if (isRowWin || isColWin || isDiagWin) {\n                    return true\n                }\n        }, \n        checkLine(i, difference) {\n            let pos = i\n            let arr = []\n            let boxNode\n            let src\n\n            /* checks if current and higher boxes have the current players image */\n            while (pos < 10) {\n                src = boxNode.img.src\n                if (src == this.img) {\n                    arr.push(true)\n                }\n\n                pos += difference\n            }\n\n        },\n        announceWinner() {\n            console.log(this.isPlayer1)\n        }\n    }\n    </script>\n    \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n\n    .game--container {\n        display: grid;\n        grid-template-columns: repeat(3, auto);\n        margin-top: 5%;\n        width: 60%;\n        margin-right: auto;\n        margin-left: auto;\n\n    }\n    .cell {\n\n        aspect-ratio: 1 / 1;\n        width: 9vh;\n        box-shadow: 0 0 0 1px #333333;\n        border: 1px solid #333333;\n        cursor: pointer;\n    }\n\n  </style>\n  "]},"metadata":{},"sourceType":"module"}