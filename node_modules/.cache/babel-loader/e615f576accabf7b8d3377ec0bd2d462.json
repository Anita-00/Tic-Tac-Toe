{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport circle from \"./circle.png\";\nimport x from \"./x.png\";\nexport default {\n  data() {\n    return {\n      id: 1,\n      isPlayer1: false,\n      img: \"\",\n      img1: circle,\n      img2: x,\n      numTurns: 1,\n      winningPlayer: \"Player1\"\n    };\n  },\n\n  methods: {\n    setImage() {\n      if (this.isPlayer1) {\n        this.img = this.img1;\n      } else {\n        this.img = this.img2;\n      }\n    },\n\n    checkLine(i, difference, limit) {\n      let pos = i;\n      let arr = [];\n      let boxNode;\n      let src;\n      let count = 0;\n      /* checks if current and higher boxes have the current players image */\n\n      while (pos < limit && count < 3) {\n        boxNode = document.getElementById(pos);\n        src = boxNode.innerHTML;\n\n        if (src.includes(this.img)) {\n          arr.push(true);\n        } else {\n          arr.push(false);\n        }\n\n        pos += difference;\n        count += 1;\n      }\n\n      pos = i;\n\n      while (count < 3) {\n        boxNode = document.getElementById(pos);\n        src = boxNode.innerHTML;\n\n        if (src.includes(this.img)) {\n          arr.push(true);\n        } else {\n          arr.push(false);\n        }\n\n        pos -= difference;\n        count += 1;\n      }\n\n      if (arr.includes(false)) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n\n    checkDiag(i) {\n      let rightDiag = [3, 5, 7];\n      let leftDiag = [1, 5, 9];\n      let isRightWin;\n      let isLeftWin;\n\n      if (rightDiag.includes(i)) {\n        isRightWin = this.checkLine(i, 2);\n      }\n\n      if (leftDiag.includes(i)) {\n        isLeftWin = this.checkLine(i, 4);\n      }\n\n      console.log(\"diag\");\n      console.log(isRightWin || isLeftWin);\n      return isRightWin || isLeftWin;\n    },\n\n    checkWin(i) {\n      let rowLimit = i * 5 % 3;\n      console.log(\"LIMIT\");\n      console.log(rowLimit);\n      let colLimit = i + 7;\n      let isRowWin = this.checkLine(i, 1, rowLimit);\n      let isColWin = this.checkLine(i, 3, colLimit);\n      /*let isDiagWin = this.checkDiag(i)*/\n\n      let isDiagWin = false;\n\n      if (isRowWin || isColWin || isDiagWin) {\n        console.log(\"THERES A WIN\");\n        return true;\n      } else {\n        console.log(\"Theres a lose \");\n        return false;\n      }\n    },\n\n    announceWinner() {\n      console.log(this.isPlayer1);\n    },\n\n    fillPlayerSign(i) {\n      this.setImage();\n      let imgId = 'img' + i;\n      let imgNode = document.getElementById(imgId);\n      let boxNode = document.getElementById(i);\n      let existingImg = boxNode.contains(imgNode);\n\n      if (existingImg === false) {\n        /* if there is no previous image in the box, add an image */\n        let newImg = document.createElement(\"img\");\n        newImg.src = this.img;\n        newImg.style.width = '100%';\n        newImg.id = imgId;\n        boxNode.appendChild(newImg);\n\n        if (this.numTurns > 4) {\n          if (this.checkWin(i)) {\n            this.announceWinner();\n          }\n        }\n\n        this.numTurns += 1;\n        this.isPlayer1 = !this.isPlayer1;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAYI,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,eAAe;EACXC,IAAG,GAAK;IACJ,OAAO;MACHC,EAAE,EAAE,CADD;MAEHC,SAAS,EAAE,KAFR;MAGHC,GAAG,EAAE,EAHF;MAIHC,IAAI,EAAEN,MAJH;MAKHO,IAAI,EAAEN,CALH;MAMHO,QAAQ,EAAE,CANP;MAOHC,aAAa,EAAE;IAPZ,CAAP;EAUH,CAZU;;EAaXC,OAAO,EAAE;IACLC,QAAQ,GAAG;MACP,IAAI,KAAKP,SAAT,EAAoB;QAChB,KAAKC,GAAL,GAAW,KAAKC,IAAhB;MACJ,CAFA,MAEO;QACH,KAAKD,GAAL,GAAW,KAAKE,IAAhB;MACJ;IACH,CAPI;;IAQLK,SAAS,CAACC,CAAD,EAAIC,UAAJ,EAAgBC,KAAhB,EAAuB;MAC5B,IAAIC,GAAE,GAAIH,CAAV;MACA,IAAII,GAAE,GAAI,EAAV;MACA,IAAIC,OAAJ;MACA,IAAIC,GAAJ;MACA,IAAIC,KAAI,GAAI,CAAZ;MAEA;;MACA,OAAOJ,GAAE,GAAID,KAAN,IAAeK,KAAI,GAAI,CAA9B,EAAiC;QAC7BF,OAAM,GAAIG,QAAQ,CAACC,cAAT,CAAwBN,GAAxB,CAAV;QACAG,GAAE,GAAID,OAAO,CAACK,SAAd;;QAEA,IAAIJ,GAAG,CAACK,QAAJ,CAAa,KAAKnB,GAAlB,CAAJ,EAA4B;UACxBY,GAAG,CAACQ,IAAJ,CAAS,IAAT;QACJ,CAFA,MAEO;UACHR,GAAG,CAACQ,IAAJ,CAAS,KAAT;QACJ;;QAEAT,GAAE,IAAKF,UAAP;QACAM,KAAI,IAAK,CAAT;MACJ;;MAEAJ,GAAE,GAAIH,CAAN;;MAEA,OAAOO,KAAI,GAAI,CAAf,EAAkB;QACdF,OAAM,GAAIG,QAAQ,CAACC,cAAT,CAAwBN,GAAxB,CAAV;QACAG,GAAE,GAAID,OAAO,CAACK,SAAd;;QAEA,IAAIJ,GAAG,CAACK,QAAJ,CAAa,KAAKnB,GAAlB,CAAJ,EAA4B;UACxBY,GAAG,CAACQ,IAAJ,CAAS,IAAT;QACJ,CAFA,MAEO;UACHR,GAAG,CAACQ,IAAJ,CAAS,KAAT;QACJ;;QAEAT,GAAE,IAAKF,UAAP;QACAM,KAAI,IAAK,CAAT;MACJ;;MAEA,IAAIH,GAAG,CAACO,QAAJ,CAAa,KAAb,CAAJ,EAAwB;QAChB,OAAO,KAAP;MACR,CAFA,MAEO;QACH,OAAO,IAAP;MACJ;IACH,CAnDI;;IAoDLE,SAAS,CAACb,CAAD,EAAI;MACT,IAAIc,SAAQ,GAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAhB;MACA,IAAIC,QAAO,GAAI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAf;MACA,IAAIC,UAAJ;MACA,IAAIC,SAAJ;;MAEA,IAAIH,SAAS,CAACH,QAAV,CAAmBX,CAAnB,CAAJ,EAA2B;QACvBgB,UAAS,GAAI,KAAKjB,SAAL,CAAeC,CAAf,EAAkB,CAAlB,CAAb;MACJ;;MAEA,IAAIe,QAAQ,CAACJ,QAAT,CAAkBX,CAAlB,CAAJ,EAA0B;QACtBiB,SAAQ,GAAI,KAAKlB,SAAL,CAAeC,CAAf,EAAkB,CAAlB,CAAZ;MACJ;;MAEAkB,OAAO,CAACC,GAAR,CAAY,MAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,UAAS,IAAKC,SAA1B;MACA,OAAOD,UAAS,IAAKC,SAArB;IAEH,CAtEI;;IAuELG,QAAQ,CAACpB,CAAD,EAAI;MACR,IAAIqB,QAAO,GAAKrB,CAAC,GAAC,CAAH,GAAM,CAArB;MACAkB,OAAO,CAACC,GAAR,CAAY,OAAZ;MACAD,OAAO,CAACC,GAAR,CAAYE,QAAZ;MACA,IAAIC,QAAO,GAAItB,IAAI,CAAnB;MAEA,IAAIuB,QAAO,GAAI,KAAKxB,SAAL,CAAeC,CAAf,EAAkB,CAAlB,EAAqBqB,QAArB,CAAf;MACA,IAAIG,QAAO,GAAI,KAAKzB,SAAL,CAAeC,CAAf,EAAkB,CAAlB,EAAqBsB,QAArB,CAAf;MACA;;MACA,IAAIG,SAAQ,GAAI,KAAhB;;MACA,IAAIF,QAAO,IAAKC,QAAZ,IAAwBC,SAA5B,EAAuC;QACnCP,OAAO,CAACC,GAAR,CAAY,cAAZ;QACA,OAAO,IAAP;MACJ,CAHA,MAGO;QACHD,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACA,OAAO,KAAP;MACJ;IACH,CAxFI;;IAyFLO,cAAc,GAAG;MAEbR,OAAO,CAACC,GAAR,CAAY,KAAK5B,SAAjB;IACH,CA5FI;;IA6FLoC,cAAc,CAAC3B,CAAD,EAAI;MAEd,KAAKF,QAAL;MACA,IAAI8B,KAAI,GAAI,QAAO5B,CAAnB;MACA,IAAI6B,OAAM,GAAIrB,QAAQ,CAACC,cAAT,CAAwBmB,KAAxB,CAAd;MACA,IAAIvB,OAAM,GAAIG,QAAQ,CAACC,cAAT,CAAwBT,CAAxB,CAAd;MACA,IAAI8B,WAAU,GAAIzB,OAAO,CAAC0B,QAAR,CAAiBF,OAAjB,CAAlB;;MAEA,IAAIC,WAAU,KAAM,KAApB,EAA2B;QACvB;QACA,IAAIE,MAAK,GAAIxB,QAAQ,CAACyB,aAAT,CAAuB,KAAvB,CAAb;QACAD,MAAM,CAAC1B,GAAP,GAAa,KAAKd,GAAlB;QACAwC,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAqB,MAArB;QACAH,MAAM,CAAC1C,EAAP,GAAYsC,KAAZ;QACAvB,OAAO,CAAC+B,WAAR,CAAoBJ,MAApB;;QAEA,IAAI,KAAKrC,QAAL,GAAgB,CAApB,EAAuB;UACnB,IAAI,KAAKyB,QAAL,CAAcpB,CAAd,CAAJ,EAAsB;YACtB,KAAK0B,cAAL;UACA;QACJ;;QAEA,KAAK/B,QAAL,IAAiB,CAAjB;QACA,KAAKJ,SAAL,GAAiB,CAAC,KAAKA,SAAvB;MACJ;IACJ;;EAtHK;AAbE,CAAf","names":["circle","x","data","id","isPlayer1","img","img1","img2","numTurns","winningPlayer","methods","setImage","checkLine","i","difference","limit","pos","arr","boxNode","src","count","document","getElementById","innerHTML","includes","push","checkDiag","rightDiag","leftDiag","isRightWin","isLeftWin","console","log","checkWin","rowLimit","colLimit","isRowWin","isColWin","isDiagWin","announceWinner","fillPlayerSign","imgId","imgNode","existingImg","contains","newImg","createElement","style","width","appendChild"],"sourceRoot":"","sources":["/Users/user/Documents/tic-tac-toe/src/components/Boxes.vue"],"sourcesContent":["<template>\n    <section class=\"game--container\" id=\"tester\">\n        <div v-for=\"i in 9\"  :key=\"i\">\n            <div :id=\"i\" class=\"cell\" @click=\"fillPlayerSign(i)\">\n            </div>\n        </div> \n    </section>\n    <p> Congratulations! {{winningPlayer}} is the winner! </p>\n    \n</template>\n  \n  <script>\n    import circle from \"./circle.png\"\n    import x from \"./x.png\"\n\n    export default {\n        data () {\n            return {\n                id: 1,\n                isPlayer1: false,\n                img: \"\",\n                img1: circle,\n                img2: x,\n                numTurns: 1,\n                winningPlayer: \"Player1\"\n            }\n            \n        },\n        methods: {\n            setImage() {\n                if (this.isPlayer1) {\n                    this.img = this.img1\n                } else {\n                    this.img = this.img2\n                }\n            }, \n            checkLine(i, difference, limit) {\n                let pos = i\n                let arr = []\n                let boxNode\n                let src\n                let count = 0\n\n                /* checks if current and higher boxes have the current players image */\n                while (pos < limit && count < 3) {\n                    boxNode = document.getElementById(pos)\n                    src = boxNode.innerHTML\n\n                    if (src.includes(this.img)) {\n                        arr.push(true)\n                    } else {\n                        arr.push(false) \n                    }\n\n                    pos += difference\n                    count += 1\n                }\n\n                pos = i\n\n                while (count < 3) {\n                    boxNode = document.getElementById(pos)\n                    src = boxNode.innerHTML\n\n                    if (src.includes(this.img)) {\n                        arr.push(true)\n                    } else {\n                        arr.push(false) \n                    }\n\n                    pos -= difference\n                    count += 1\n                }\n\n                if (arr.includes(false)){\n                        return false\n                } else {\n                    return true\n                }\n            },\n            checkDiag(i) {\n                let rightDiag = [3,5,7]\n                let leftDiag = [1,5,9]\n                let isRightWin\n                let isLeftWin\n\n                if (rightDiag.includes(i)) {\n                    isRightWin = this.checkLine(i, 2)\n                }\n\n                if (leftDiag.includes(i)) {\n                    isLeftWin = this.checkLine(i, 4)\n                }\n\n                console.log(\"diag\")\n                console.log(isRightWin || isLeftWin)\n                return isRightWin || isLeftWin\n\n            },\n            checkWin(i) { \n                let rowLimit = (i*5)%3\n                console.log(\"LIMIT\")\n                console.log(rowLimit) \n                let colLimit = i + 7\n\n                let isRowWin = this.checkLine(i, 1, rowLimit)\n                let isColWin = this.checkLine(i, 3, colLimit)\n                /*let isDiagWin = this.checkDiag(i)*/\n                let isDiagWin = false\n                if (isRowWin || isColWin || isDiagWin) {\n                    console.log(\"THERES A WIN\")\n                    return true\n                } else {\n                    console.log(\"Theres a lose \")\n                    return false\n                }\n            }, \n            announceWinner() {\n\n                console.log(this.isPlayer1)\n            },\n            fillPlayerSign(i) {\n                \n                this.setImage()\n                let imgId = 'img'+ i\n                let imgNode = document.getElementById(imgId)\n                let boxNode = document.getElementById(i)\n                let existingImg = boxNode.contains(imgNode)\n\n                if (existingImg === false) {\n                    /* if there is no previous image in the box, add an image */\n                    let newImg = document.createElement(\"img\")\n                    newImg.src = this.img\n                    newImg.style.width = '100%'\n                    newImg.id = imgId\n                    boxNode.appendChild(newImg)\n                    \n                    if (this.numTurns > 4) {\n                        if (this.checkWin(i)) {\n                        this.announceWinner()\n                        }\n                    }\n                    \n                    this.numTurns += 1\n                    this.isPlayer1 = !this.isPlayer1\n                }\n            }\n        }\n    }\n    </script>\n    \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n\n    .game--container {\n        display: grid;\n        grid-template-columns: repeat(3, auto);\n        margin-top: 5%;\n        width: 60%;\n        margin-right: auto;\n        margin-left: auto;\n\n    }\n    .cell {\n\n        aspect-ratio: 1 / 1;\n        width: 9vh;\n        box-shadow: 0 0 0 1px #333333;\n        border: 1px solid #333333;\n        cursor: pointer;\n    }\n\n  </style>\n  "]},"metadata":{},"sourceType":"module"}