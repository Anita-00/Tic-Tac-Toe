{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from './o.png';\n\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"card\\\" style=\\\"width:18rem;\\\"><img class=\\\"card-img-top\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Card image cap\\\"><div class=\\\"card-body\\\"><h5 class=\\\"card-title\\\">Card title</h5><p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card&#39;s content.</p><a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a></div></div>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.id), 1\n  /* TEXT */\n  )], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";OAE4BA,gBAAa;;;;;6DADrCC,6BAOE,MACFC,iBAAGC,QAAH,GAAK;EAAA","names":["_imports_0","_hoisted_1","_toDisplayString","$data"],"sourceRoot":"","sources":["/Users/user/Documents/tic-tac-toe/src/components/Boxes.vue"],"sourcesContent":["<template>\n    <div class=\"card\" style=\"width: 18rem;\">\n  <img class=\"card-img-top\" src=\"./o.png\" alt=\"Card image cap\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Card title</h5>\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div>\n    {{ id }}\n</template>\n  \n  <script>\n  export default {\n    data () {\n        return {\n            id: 1,\n            isClicked: true\n        }\n        \n    }\n  }\n  </script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n  <style scoped>\n\n  </style>\n  "]},"metadata":{},"sourceType":"module"}